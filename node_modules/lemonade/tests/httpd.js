/**
 * Change into the test app dir
 */
process.chdir(__dirname + '/httpd-test-app');

var  assert  = require('assert')
    ,http    = require('http')
    ,Kernel  = require('../kernel/kernel.js')
    ,port    = 13337
    ,krnl    = new Kernel({}, {}, {
        webserver : [ 'httpd', port ]
    }, {});

krnl.once(krnl.ONLINE, function() {

    function test1() {
        var req1 = http.request({
             hostname : 'localhost'
            ,port     : port
            ,path     : '/?p1=a&p2[]=b&p2[]=c&p3[key1]=d&p3[key2]=e'
            ,method   : 'GET'
        }, function(res) {
            var body = '';
            res.on('data', function (chunk) {
                body += chunk;
            });
            res.on('end', function() {
                var obj = JSON.parse(body);
                assert.ok(obj.response.p1 === 'a');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' get simple param');
                assert.ok(obj.response.p2[0] === 'b');
                assert.ok(obj.response.p2[1] === 'c');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' get array');
                assert.ok(obj.response.p3['key1'] === 'd');
                assert.ok(obj.response.p3['key2'] === 'e');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' get object');
                krnl.emit('done');
            });
        });
        req1.end();
    }; test1();

    function test2() {
        var post = 'p1=a&p2[]=b&p2[]=c&p3[key1]=d&p3[key2]=e', req2 = http.request({
             hostname : 'localhost'
            ,port     : port
            ,path     : '/'
            ,method   : 'POST'
        }, function(res) {
            var body = '';
            res.on('data', function (chunk) {
                body += chunk;
            });
            res.on('end', function() {
                var obj = JSON.parse(body);
                assert.ok(obj.response.p1 === 'a');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' post simple param');
                assert.ok(obj.response.p2[0] === 'b');
                assert.ok(obj.response.p2[1] === 'c');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' post array');
                assert.ok(obj.response.p3['key1'] === 'd');
                assert.ok(obj.response.p3['key2'] === 'e');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' post object');
                krnl.emit('done');
            });
        });
        req2.write(post);
        req2.end();
    }; test2();

    function test3() {
        var post = JSON.stringify({ testjson : 'fgh' }), req3 = http.request({
            hostname : 'localhost'
            ,port     : port
            ,path     : '/'
            ,method   : 'POST'
        }, function(res) {
            var body = '';
            res.on('data', function (chunk) {
                body += chunk;
            });
            res.on('end', function() {
                var obj = JSON.parse(body);
                assert.ok(obj.response.testjson === 'fgh');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' post json');
                krnl.emit('done');
            });
        });
        req3.write(post);
        req3.end();
    }; test3();

    function test4() {
        var req4 = http.request({
             hostname : 'localhost'
            ,port     : port
            ,path     : '/testroute?p1=a'
            ,method   : 'GET'
        }, function(res) {
            var body = '';
            res.on('data', function (chunk) {
                body += chunk;
            });
            res.on('end', function() {
                var obj = JSON.parse(body);
                assert.ok(obj.response.p1 === 'a');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' routing');
                krnl.emit('done');
            });
        });
        req4.end();
    }; test4();

    function test5() {
        var post =

            '------WebKitFormBoundaryhAvwXDBfpBirC3Yr\r\n' +
            'Content-Disposition: form-data; name="testfilesingle"; filename="test.txt"\r\n' +
            'Content-Type: text/plain\r\n\r\n' +

            'abc\r\n' +

            '------WebKitFormBoundaryhAvwXDBfpBirC3Yr--\r\n'

        ,req5 = http.request({
             hostname : 'localhost'
            ,port     : port
            ,path     : '/upload'
            ,method   : 'POST'
            ,headers  : { 'content-type'   : 'multipart/form-data; boundary=----WebKitFormBoundaryhAvwXDBfpBirC3Yr'
                        , 'content-length' : post.length }
        }, function(res) {
            var body = '';
            res.on('data', function (chunk) {
                body += chunk;
            });
            res.on('end', function() {
                var obj = JSON.parse(body);
                assert.ok(obj.response === 'abc');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' file upload - simple');
                krnl.emit('done');
            });
        });
        req5.write(post);
        req5.end();
    }; test5();

    function test6() {

        var post =

                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ\r\n' +
                'Content-Disposition: form-data; name="testvar"\r\n\r\n' +

                'abc\r\n' +
                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ\r\n' +
                'Content-Disposition: form-data; name="testarr[]"\r\n\r\n' +

                'abc\r\n' +
                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ\r\n' +
                'Content-Disposition: form-data; name="testarr[]"\r\n\r\n' +

                'abc\r\n' +
                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ\r\n' +
                'Content-Disposition: form-data; name="testobj[key]"\r\n\r\n' +

                'abc\r\n' +
                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ\r\n' +
                'Content-Disposition: form-data; name="testfile"; filename="test.txt"\r\n' +
                'Content-Type: text/plain\r\n\r\n' +

                'abc\r\n' +

                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ\r\n' +
                'Content-Disposition: form-data; name="testfiles[]"; filename="test.txt"\r\n' +
                'Content-Type: text/plain\r\n\r\n' +

                'abc\r\n' +

                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ\r\n' +
                'Content-Disposition: form-data; name="testfiles[]"; filename="test.txt"\r\n' +
                'Content-Type: text/plain\r\n\r\n' +

                'abc\r\n' +

                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ\r\n' +
                'Content-Disposition: form-data; name="testfileobj[key]"; filename="test.txt"\r\n' +
                'Content-Type: text/plain\r\n\r\n' +

                'abc\r\n' +

                '------WebKitFormBoundary9FmFYsDA0xhgeBsQ--'

        ,req6 = http.request({
             hostname : 'localhost'
            ,port     : port
            ,path     : '/upload'
            ,method   : 'POST'
            ,headers  : { 'content-type'   : 'multipart/form-data; boundary=----WebKitFormBoundary9FmFYsDA0xhgeBsQ'
                        , 'content-length' : post.length }
        }, function(res) {
            var body = '';
            res.on('data', function (chunk) {
                body += chunk;
            });
            res.on('end', function() {
                var obj = JSON.parse(body);
                assert.ok(obj.response === 'abcabcabcabcabcabcabcabc');
                console.log(krnl.utility.ansi('green', '[ OK ]') + ' file upload - multiple');
                krnl.emit('done');
            });
        });
        req6.write(post);
        req6.end();
    }; test6();

});

var nocompleted = 0; krnl.on('done', function() {
    if (++nocompleted === 5) {
        setTimeout(function() {
            krnl.shutdown('bybye');
        }, 100);
    }
});